{"version":3,"sources":["calculator.js"],"names":["isExp","$","isDeg","isLev","isOpr","document","getElementById","innerHTML","isRot","tempPow","oriOpr","OL_Action_Root","timeout","type","Req_ajax","ajax","data","res","info","clearOverflow","cache","NaN","success","errorThrown","alert","autoFill","error","textStatus","tempOpr","idOpr","isPow","isFunc","expSolve","idNum","rootSolve","charAt","numberBoard","scrollWidth","clientWidth","scrollHeight","isNaN","isNew","isEnd","substr","indexOf","length","Math","trunc","includes","clearFunc","isFinite","i","exception","replace","flag","init","fontSize","clientHeight"],"mappings":"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","file":"calculator.js","sourcesContent":["/*jshint esversion: 6*/\nvar isNew = false, isEnd = false, isFunc = 0;\nvar isPow = false, isExp = false, isDeg = false, isLev = 0;\nvar isOpr = true, isRot = false;\nvar tempOpr = \"\", tempPow = \"\", oriOpr = \"\";\nvar OL_Action_Root = \"http://127.0.0.1:8888\";\n\nfunction Req_ajax() {\n  $.ajax({\n    data: {\n      info: document.getElementById('operations').innerHTML,\n      type: \"post\"\n    },\n    url: OL_Action_Root + \"/req_cal\",\n    dataType: 'json',\n    cache: false,\n    timeout: 5000,\n    type: \"post\",\n    success: function (data) {\n      var res = data;\n      if (res[0] == 'success') {\n        document.getElementById('number').innerHTML = res[1];\n        clearOverflow();\n      }\n      else if (res[0] == 'NaN') {\n        document.getElementById('number').innerHTML = NaN;\n      }\n      else {\n        document.getElementById('number').innerHTML = \"INVALID\";\n      }\n    },\n    error: function (jqXHR, textStatus, errorThrown) {\n      document.getElementById('number').innerHTML = \"TIMEOUT\";\n      alert(\"Timeout! Please check your network connection!\");\n    }\n  });\n}\n\nfunction autoFill() {\n  var idOpr = document.getElementById('operations');\n  for (; isFunc > 0; --isFunc) {\n    idOpr.innerHTML += \")\";\n  }\n  tempOpr = \"\";\n  oriOpr = \"\";\n}\n\nfunction clearFunc() {\n  if (isPow || isFunc > 0 || isLev) {\n    isPow = false;\n    isFunc = 0;\n    if(!isRot)\n      document.getElementById('operations').innerHTML = oriOpr;\n    tempOpr = tempPow = oriOpr = \"\";\n  }\n}\n\nfunction rootSolve() {\n  isRot = false;\n  document.getElementById('operations').innerHTML += document.getElementById('number').innerHTML + \")\";\n}\n\nfunction expSolve() {\n  var idNum = document.getElementById('number'),\n    idOpr = document.getElementById('operations');\n  if (idNum.innerHTML.charAt(0) == \"-\")\n    idOpr.innerHTML += idNum.innerHTML + \")\";\n  else\n    idOpr.innerHTML += \"+\" + idNum.innerHTML + \")\";\n  isExp = false;\n}\n\nvar clearOverflow = function () {\n  var numberBoard = document.getElementById('number');\n  var init = 140;\n  do {\n    numberBoard.style.fontSize = (init /= 1.2) + \"pt\";\n  } while (numberBoard.scrollWidth > numberBoard.clientWidth || numberBoard.scrollHeight > numberBoard.clientHeight);\n};\n\nfunction input(data) {\n  var idNum = document.getElementById('number'), idOpr = document.getElementById('operations');\n  if(isNaN(idNum.innerHTML)){\n    idNum.innerHTML = \"0\";\n  }\n  if (isNaN(data)) {\n    switch (data) {\n      case \"C\":\n        idOpr.innerHTML = \"\";\n        idNum.innerHTML = \"0\";\n        tempOpr = \"\";\n        tempPow = \"\";\n        oriOpr = \"\";\n        isFunc = isLev = 0;\n        isNew = isEnd = isExp = isPow = isDeg = isRot = false;\n        isOpr = true;\n        clearOverflow();\n        break;\n      case \"CE\":\n        idNum.innerHTML = \"0\";\n        isDeg = isExp = false;\n        clearOverflow();\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        break;\n      case \"Del\":\n        if (isFunc) {\n          tempOpr = tempOpr.substr(tempOpr.indexOf(\"(\") + 1);\n          idOpr.innerHTML = oriOpr + tempOpr;\n          --isFunc;\n          if (isFunc == 0) {\n            idOpr.innerHTML = oriOpr;\n            tempOpr = \"\";\n          }\n          break;\n        }\n        else if (isPow) {\n          idOpr = oriOpr;\n          isPow = false;\n          break;\n        }\n        else if (isDeg) {\n          idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 4) + \"deg\";\n          if (idNum.innerHTML == \"deg\")\n            idNum.innerHTML = \"0deg\";\n          break;\n        }\n        else\n          oriOpr = \"\";\n        idNum.innerHTML = Math.trunc(idNum.innerHTML / 10);\n        if (idNum.innerHTML == \"NaN\")\n          idNum.innerHTML = \"0\";\n        if (idNum.innerHTML.includes(\"e\"))\n          idNum.innerHTML = \"0\";\n        clearOverflow();\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        break;\n      case \".\":\n        if (isPow || isFunc > 0) {\n          isPow = false;\n          isFunc = 0;\n          idOpr = oriOpr;\n        }\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if (idNum.innerHTML.includes(\".\")) {\n          break;\n        }\n        idNum.innerHTML += \".\";\n        isNew = false;\n        break;\n      case \"±\":\n        clearFunc();\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if (isDeg)\n          idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 3);\n        idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - isLev);\n\n        if (idNum.innerHTML == \"π\")\n          idNum.innerHTML = \"-π\";\n        else if (idNum.innerHTML == \"-π\")\n          idNum.innerHTML = \"π\";\n        else\n          idNum.innerHTML = -idNum.innerHTML;\n\n        if(!isFinite(idNum.innerHTML)){\n          alert(\"The number is too large.\");\n          idNum.innerHTML = NaN;\n          break;\n        }\n\n        for (let i = 0; i < isLev; ++i)\n          idNum.innerHTML += \"!\";\n        if (isDeg)\n          idNum.innerHTML += \"deg\";\n        isNew = false;\n        break;\n      case \"=\":\n        if (isEnd)\n          break;\n        try {\n          if (isFunc == 0 && !isPow && isOpr && !isExp && !isRot)\n            idOpr.innerHTML += idNum.innerHTML;\n          if (isExp)\n            expSolve();\n          if (isRot)\n            rootSolve();\n          autoFill();\n          Req_ajax();\n          idOpr.innerHTML += data;\n        }\n        catch (exception) {\n          clearOverflow();\n          idNum.innerHTML = \"INVALID\";\n        }\n        isNew = isPow = isExp = isDeg = isLev = isRot = false;\n        isOpr = isEnd = true;\n        break;\n      case \"(\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        idOpr.innerHTML += data;\n        break;\n      case \")\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        isOpr = false;\n        if (isFunc == 0 && !isLev && !isPow) {\n          idOpr.innerHTML += idNum.innerHTML;\n          isDeg = false;\n          isNew = true;\n        }\n        idOpr.innerHTML += \")\";\n        break;\n      case \"10^x\": case \"e^x\":\n        data = data.substr(0, data.length - 1);\n      case \"sin\": case \"asin\": case \"cos\": case \"acos\":\n      case \"log\": case \"ln\": case \"tan\": case \"atan\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if(!isOpr)\n          break;\n        if (isExp)\n          break;\n        if (isRot)\n          rootSolve();\n        if (tempOpr == \"\") {\n          if (oriOpr == \"\")\n            oriOpr = idOpr.innerHTML;\n          tempOpr = idNum.innerHTML;\n        }\n        tempOpr = data + \"(\" + tempOpr;\n        idOpr.innerHTML = oriOpr + tempOpr;\n        ++isFunc;\n        isNew = true;\n        break;\n      case \"deg\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if (isExp)\n          break;\n        clearFunc();\n        if (isDeg) {\n          idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 3);\n          isDeg = false;\n        }\n        else {\n          idNum.innerHTML += \"deg\";\n          isDeg = true;\n        }\n        break;\n\n      case \"√\":\n        data = \"x^(1/2)\";\n      case \"1/x\":\n        if (data == \"1/x\")\n          data = \"x^(-1)\";\n      case \"x^2\": case \"x^3\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if (isExp)\n          break;\n        autoFill();\n        data = data.substr(1);\n        if (oriOpr == \"\")\n          oriOpr = idOpr.innerHTML;\n        if (!isPow && isFunc == 0 && isOpr) {\n          idOpr.innerHTML += idNum.innerHTML;\n          tempPow += idNum.innerHTML;\n        }\n        isPow = true;\n        idOpr.innerHTML += data;\n        tempPow += data;\n        isNew = true;\n        break;\n      case \"n!\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        if (isExp)\n          break;\n        clearFunc();\n        if (isDeg)\n          idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 3);\n        idNum.innerHTML += \"!\";\n        ++isLev;\n        if (isDeg)\n          idNum.innerHTML += \"deg\";\n        isNew = false;\n        break;\n      case \"Exp\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        clearFunc();\n        if (isExp)\n          break;\n        idNum.innerHTML = idNum.innerHTML.replace(/deg/g, \"\");\n        idNum.innerHTML = idNum.innerHTML.replace(/!/g, \"\");\n        isDeg = false;\n        isExp = true;\n        isLev = 0;\n        isNew = true;\n        idOpr.innerHTML += \"(\" + idNum.innerHTML;\n        if (!idNum.innerHTML.includes(\".\")) {\n          idOpr.innerHTML += \".\";\n        }\n        idOpr.innerHTML += \"e\";\n        break;\n      case \"π\":\n        if (isExp)\n          break;\n        clearFunc();\n        isDeg = false;\n        isLev = 0;\n        isNew = true;\n        isEnd = false;\n        idNum.innerHTML = \"π\";\n        break;\n      case \"y√x\":\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        autoFill();\n        if (isPow || isRot || !isOpr) {\n          if (isRot)\n            rootSolve();\n        }\n        else {\n          idOpr.innerHTML += idNum.innerHTML;\n        }\n        idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 3 * isDeg);\n        isDeg = false;\n        isRot = true;\n        isLev = 0;\n        isNew = true;\n        idOpr.innerHTML += \"^(1/\";\n        break;\n      case \"x^y\":\n        data = \"^\";\n      default:\n        if (isEnd) {\n          idOpr.innerHTML = \"\";\n          isEnd = false;\n        }\n        var flag = isFunc;\n        autoFill();\n        if (!(flag > 0 || isExp || isPow || !isOpr))\n          idOpr.innerHTML += idNum.innerHTML;\n        if (isExp)\n          expSolve();\n        if (isRot)\n          rootSolve();\n        idOpr.innerHTML += data;\n        isNew = true;\n        isPow = false;\n        isDeg = false;\n        isLev = false;\n        isOpr = true;\n        break;\n    }\n  }\n  else {\n    clearFunc();\n    if (isEnd) {\n      idOpr.innerHTML = \"\";\n      idNum.innerHTML = \"0\";\n      isEnd = false;\n    }\n    if (idNum.innerHTML == \"0\" || isNew) {\n      idNum.innerHTML = data;\n      clearOverflow();\n      isNew = false;\n      return;\n    }\n    if (isDeg)\n      idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - 3);\n    idNum.innerHTML = idNum.innerHTML.substr(0, idNum.innerHTML.length - isLev);\n    idNum.innerHTML += data;\n    for (let i = 0; i < isLev; ++i)\n      idNum.innerHTML += \"!\";\n    if (isDeg)\n      idNum.innerHTML += \"deg\";\n    clearOverflow();\n  }\n}"]}